// <auto-generated />
using System;
using Inżynierka.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inżynierka.Shared.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230115140439_UserFavouritesRemoveType")]
    partial class UserFavouritesRemoveType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inżynierka.Shared.Entities.Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("REGON")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Id");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EstateType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfferStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OfferTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OfferType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool?>("RemoteControl")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("SellerType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Voivodeship")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Offer");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgentInAgencyId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ConfirmationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerOfAgencyId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PasswordRecoveryGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgentInAgencyId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("OwnerOfAgencyId")
                        .IsUnique()
                        .HasFilter("[OwnerOfAgencyId] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionParameters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserAction");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserEvent", b =>
                {
                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("EstateAndOfferType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCompletionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.HasKey("OfferId", "EstateAndOfferType");

                    b.HasIndex("SellerId");

                    b.ToTable("UserEvent");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserFavourite", b =>
                {
                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LikeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OfferId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavourite");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstateAndOfferType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResponded")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("UserMessage");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Apartment.ApartmentRentOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AvailableForStudents")
                        .HasColumnType("bit");

                    b.Property<string>("AvailableSinceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Balcony")
                        .HasColumnType("bit");

                    b.Property<bool?>("Basement")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("Dishwasher")
                        .HasColumnType("bit");

                    b.Property<bool?>("Elevator")
                        .HasColumnType("bit");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Fridge")
                        .HasColumnType("bit");

                    b.Property<bool?>("Furniture")
                        .HasColumnType("bit");

                    b.Property<bool?>("Garden")
                        .HasColumnType("bit");

                    b.Property<string>("HeatingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlyForNonsmoking")
                        .HasColumnType("bit");

                    b.Property<bool?>("Oven")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParkingSpace")
                        .HasColumnType("bit");

                    b.Property<int?>("Rent")
                        .HasColumnType("int");

                    b.Property<bool?>("SeparateKitchen")
                        .HasColumnType("bit");

                    b.Property<bool?>("Stove")
                        .HasColumnType("bit");

                    b.Property<bool?>("TV")
                        .HasColumnType("bit");

                    b.Property<bool?>("Terrace")
                        .HasColumnType("bit");

                    b.Property<bool?>("TwoLevel")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UtilityRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("WashingMachine")
                        .HasColumnType("bit");

                    b.Property<string>("WindowsType")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ApartmentRentOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Apartment.ApartmentSaleOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<string>("AvailableSinceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Balcony")
                        .HasColumnType("bit");

                    b.Property<bool?>("Basement")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("Dishwasher")
                        .HasColumnType("bit");

                    b.Property<bool?>("Elevator")
                        .HasColumnType("bit");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorCount")
                        .HasColumnType("int");

                    b.Property<string>("FormOfProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Fridge")
                        .HasColumnType("bit");

                    b.Property<bool?>("Furniture")
                        .HasColumnType("bit");

                    b.Property<bool?>("Garden")
                        .HasColumnType("bit");

                    b.Property<string>("HeatingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Oven")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParkingSpace")
                        .HasColumnType("bit");

                    b.Property<int?>("Rent")
                        .HasColumnType("int");

                    b.Property<bool?>("SeparateKitchen")
                        .HasColumnType("bit");

                    b.Property<bool?>("Stove")
                        .HasColumnType("bit");

                    b.Property<bool?>("TV")
                        .HasColumnType("bit");

                    b.Property<bool?>("Terrace")
                        .HasColumnType("bit");

                    b.Property<bool?>("TwoLevel")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfMarket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UtilityRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("WashingMachine")
                        .HasColumnType("bit");

                    b.Property<string>("WindowsType")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ApartmentSaleOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.BusinessPremises.BusinessPremisesRentOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("AvailableFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("Commercial")
                        .HasColumnType("bit");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Elevator")
                        .HasColumnType("bit");

                    b.Property<string>("FinishCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Furnishings")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gastronomic")
                        .HasColumnType("bit");

                    b.Property<bool?>("Heating")
                        .HasColumnType("bit");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hotel")
                        .HasColumnType("bit");

                    b.Property<bool?>("Industrial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Office")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParkingSpace")
                        .HasColumnType("bit");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("Service")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("Shopwindow")
                        .HasColumnType("bit");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.Property<int?>("YearOfConstruction")
                        .HasColumnType("int");

                    b.ToTable("BusinessPremisesRentOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.BusinessPremises.BusinessPremisesSaleOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("Commercial")
                        .HasColumnType("bit");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Elevator")
                        .HasColumnType("bit");

                    b.Property<string>("FinishCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Furnishings")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gastronomic")
                        .HasColumnType("bit");

                    b.Property<bool?>("Heating")
                        .HasColumnType("bit");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hotel")
                        .HasColumnType("bit");

                    b.Property<bool?>("Industrial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Office")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParkingSpace")
                        .HasColumnType("bit");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("Service")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("Shopwindow")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfMarket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.Property<int?>("YearOfConstruction")
                        .HasColumnType("int");

                    b.ToTable("BusinessPremisesSaleOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Garage.GarageRentOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GarageRentOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Garage.GarageSaleOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfMarket")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GarageSaleOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Hall.HallRentOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("AvailableFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("Commercial")
                        .HasColumnType("bit");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Fencing")
                        .HasColumnType("bit");

                    b.Property<bool?>("FieldDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("FinishCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flooring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasOfficeRooms")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRamp")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSocialFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("Heating")
                        .HasColumnType("bit");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Office")
                        .HasColumnType("bit");

                    b.Property<string>("ParkingSpace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PavedDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("Phone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Production")
                        .HasColumnType("bit");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sewerage")
                        .HasColumnType("bit");

                    b.Property<bool?>("Storage")
                        .HasColumnType("bit");

                    b.Property<bool?>("ThreePhaseElectricPower")
                        .HasColumnType("bit");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.ToTable("HallRentOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Hall.HallSaleOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("Commercial")
                        .HasColumnType("bit");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Fencing")
                        .HasColumnType("bit");

                    b.Property<bool?>("FieldDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("FinishCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flooring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasOfficeRooms")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRamp")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSocialFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("Heating")
                        .HasColumnType("bit");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Office")
                        .HasColumnType("bit");

                    b.Property<string>("ParkingSpace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PavedDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("Phone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Production")
                        .HasColumnType("bit");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sewerage")
                        .HasColumnType("bit");

                    b.Property<bool?>("Storage")
                        .HasColumnType("bit");

                    b.Property<bool?>("ThreePhaseElectricPower")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfMarket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.ToTable("HallSaleOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.House.HouseRentOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("Attic")
                        .HasColumnType("bit");

                    b.Property<string>("AtticType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AvailableForStudents")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AvailableFromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Basement")
                        .HasColumnType("bit");

                    b.Property<bool?>("Biomass")
                        .HasColumnType("bit");

                    b.Property<bool?>("BrickFence")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("CoalHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConcreteFence")
                        .HasColumnType("bit");

                    b.Property<int?>("ConstructionYear")
                        .HasColumnType("int");

                    b.Property<bool?>("DistrictHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("ElectricHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("FieldDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("FinishCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Furnishings")
                        .HasColumnType("bit");

                    b.Property<bool?>("Garden")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("GasHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("Geothermics")
                        .HasColumnType("bit");

                    b.Property<bool?>("HeatPump")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hedge")
                        .HasColumnType("bit");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsARecreationHouse")
                        .HasColumnType("bit");

                    b.Property<int?>("LandArea")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MetalFence")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Net")
                        .HasColumnType("bit");

                    b.Property<bool?>("OilHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlyForNonsmoking")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherFencing")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParkingSpace")
                        .HasColumnType("bit");

                    b.Property<bool?>("PavedDriveway")
                        .HasColumnType("bit");

                    b.Property<int>("Rent")
                        .HasColumnType("int");

                    b.Property<string>("RoofType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoofingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("SolarCollector")
                        .HasColumnType("bit");

                    b.Property<bool?>("SwimmingPool")
                        .HasColumnType("bit");

                    b.Property<bool?>("TileStoves")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.Property<string>("WindowsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WoodenFence")
                        .HasColumnType("bit");

                    b.ToTable("HouseRentOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.House.HouseSaleOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryBlinds")
                        .HasColumnType("bit");

                    b.Property<bool?>("AntiBurglaryWindowsOrDoors")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("Attic")
                        .HasColumnType("bit");

                    b.Property<string>("AtticType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Basement")
                        .HasColumnType("bit");

                    b.Property<bool?>("Biomass")
                        .HasColumnType("bit");

                    b.Property<bool?>("BrickFence")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClosedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("CoalHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConcreteFence")
                        .HasColumnType("bit");

                    b.Property<int?>("ConstructionYear")
                        .HasColumnType("int");

                    b.Property<bool?>("DistrictHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("ElectricHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("FieldDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("FinishCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Furnishings")
                        .HasColumnType("bit");

                    b.Property<bool?>("Garden")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("GasHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("Geothermics")
                        .HasColumnType("bit");

                    b.Property<bool?>("HeatPump")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hedge")
                        .HasColumnType("bit");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("IntercomOrVideophone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsARecreationHouse")
                        .HasColumnType("bit");

                    b.Property<int?>("LandArea")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MetalFence")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonitoringOrSecurity")
                        .HasColumnType("bit");

                    b.Property<bool?>("Net")
                        .HasColumnType("bit");

                    b.Property<bool?>("OilHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherFencing")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherHeating")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParkingSpace")
                        .HasColumnType("bit");

                    b.Property<bool?>("PavedDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("RoofType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoofingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("SolarCollector")
                        .HasColumnType("bit");

                    b.Property<bool?>("SwimmingPool")
                        .HasColumnType("bit");

                    b.Property<bool?>("TileStoves")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfMarket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.Property<string>("WindowsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WoodenFence")
                        .HasColumnType("bit");

                    b.ToTable("HouseSaleOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Plot.PlotOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<bool?>("AsphaltDriveway")
                        .HasColumnType("bit");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool?>("FieldDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("Forest")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFenced")
                        .HasColumnType("bit");

                    b.Property<bool?>("Lake")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Mountains")
                        .HasColumnType("bit");

                    b.Property<bool?>("OpenArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("PavedDriveway")
                        .HasColumnType("bit");

                    b.Property<bool?>("Phone")
                        .HasColumnType("bit");

                    b.Property<string>("PlotType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Sea")
                        .HasColumnType("bit");

                    b.Property<bool?>("SepticTank")
                        .HasColumnType("bit");

                    b.Property<bool?>("SewageTreatmentPlant")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sewerage")
                        .HasColumnType("bit");

                    b.Property<bool?>("Water")
                        .HasColumnType("bit");

                    b.ToTable("PlotOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Room.RoomRentingOffer", b =>
                {
                    b.HasBaseType("Inżynierka.Shared.Entities.Offer");

                    b.Property<int?>("AdditionalFees")
                        .HasColumnType("int");

                    b.Property<bool?>("AvailableForStudents")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AvailableFromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("CableTV")
                        .HasColumnType("bit");

                    b.Property<int?>("Deposit")
                        .HasColumnType("int");

                    b.Property<bool?>("Dishwasher")
                        .HasColumnType("bit");

                    b.Property<bool?>("Fridge")
                        .HasColumnType("bit");

                    b.Property<bool?>("Furniture")
                        .HasColumnType("bit");

                    b.Property<bool?>("HomePhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Internet")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfPeopleInTheRoom")
                        .HasColumnType("int");

                    b.Property<bool?>("OnlyForNonsmoking")
                        .HasColumnType("bit");

                    b.Property<bool?>("Oven")
                        .HasColumnType("bit");

                    b.Property<bool?>("Stove")
                        .HasColumnType("bit");

                    b.Property<bool?>("TV")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WashingMachine")
                        .HasColumnType("bit");

                    b.ToTable("RoomRentingOffer", (string)null);
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.Offer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.User", "Seller")
                        .WithMany("UserOffers")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.User", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Agency", "AgentInAgency")
                        .WithMany("Agents")
                        .HasForeignKey("AgentInAgencyId");

                    b.HasOne("Inżynierka.Shared.Entities.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Inżynierka.Shared.Entities.Agency", "OwnerOfAgency")
                        .WithOne("Owner")
                        .HasForeignKey("Inżynierka.Shared.Entities.User", "OwnerOfAgencyId");

                    b.Navigation("AgentInAgency");

                    b.Navigation("DeletedBy");

                    b.Navigation("OwnerOfAgency");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserEvent", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.User", "Seller")
                        .WithMany("UserEvents")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserFavourite", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.User", "User")
                        .WithMany("UserFavourites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.UserMessage", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.User", "Seller")
                        .WithMany("UserMessages")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Apartment.ApartmentRentOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Apartment.ApartmentRentOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Apartment.ApartmentSaleOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Apartment.ApartmentSaleOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.BusinessPremises.BusinessPremisesRentOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.BusinessPremises.BusinessPremisesRentOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.BusinessPremises.BusinessPremisesSaleOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.BusinessPremises.BusinessPremisesSaleOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Garage.GarageRentOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Garage.GarageRentOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Garage.GarageSaleOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Garage.GarageSaleOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Hall.HallRentOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Hall.HallRentOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Hall.HallSaleOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Hall.HallSaleOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.House.HouseRentOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.House.HouseRentOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.House.HouseSaleOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.House.HouseSaleOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Plot.PlotOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Plot.PlotOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.OfferTypes.Room.RoomRentingOffer", b =>
                {
                    b.HasOne("Inżynierka.Shared.Entities.Offer", null)
                        .WithOne()
                        .HasForeignKey("Inżynierka.Shared.Entities.OfferTypes.Room.RoomRentingOffer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.Agency", b =>
                {
                    b.Navigation("Agents");

                    b.Navigation("Owner")
                        .IsRequired();
                });

            modelBuilder.Entity("Inżynierka.Shared.Entities.User", b =>
                {
                    b.Navigation("UserEvents");

                    b.Navigation("UserFavourites");

                    b.Navigation("UserMessages");

                    b.Navigation("UserOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
