@using Inżynierka.Client.Logics
@using Inżynierka.Shared.ViewModels.Offer.Update
@using Inżynierka_Common.Enums
@using Inżynierka_Common.Helpers
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IJSRuntime JS
@inject IApiLogic _apiLogic

@if(hallRentVm != null)
{
    <AuthorizeView>
        <NotAuthorized>
        @{
            NavManager.NavigateTo("/Auth/SignIn");
        }
    </NotAuthorized>
    <Authorized>
        @{
            if (context.User.Claims.FirstOrDefault(x => x.Type == "UserId")?.Value != sellerId.ToString())
            {
                NavManager.NavigateTo("/homepage");
            }
        }
    </Authorized>
    </AuthorizeView>
    <EditForm Model="hallRentVm" OnValidSubmit="Success">
    <DataAnnotationsValidator />
    <MatThemeProvider Theme="@theme">
        <div class="mat-layout-grid">
            <div class="mat-layout-grid-inner">

                <!-- page header -->
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-10">
                    <p id="Create-title-bar">Edycja oferty wynajmu hali</p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>

                <!-- offer title-->
                <CreateFormSplitter Text="Podstawowe informacje"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-8">
                    <p>
                        <MatTextField Style="width:100%;" Label="Tytuł ogłoszenia" @bind-Value="hallRentVm.OfferTitle" />
                        <ValidationMessage For="@(() => hallRentVm.OfferTitle)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

                <!-- offer row 1 (price, rent, area, roomCount)-->
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <p>
                        <MatNumericUpDownField Label="Czynsz (zł)"
                                               @bind-Value=@hallRentVm.Price
                                               Style="width:100%;"
                                               DecimalPlaces=0>
                        </MatNumericUpDownField>
                        <ValidationMessage For="@(() => hallRentVm.Price)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <p>
                        <MatNumericUpDownField Label="Powierzchnia (m²)"
                                               @bind-Value=@hallRentVm.Area
                                               DecimalPlaces=0
                                               Style="width:100%;">
                        </MatNumericUpDownField>
                        <ValidationMessage For="@(() => hallRentVm.Area)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <p>
                        <MatTextField Style="width:100%;" @bind-Value="hallRentVm.AvailableFromDate" Label="Dostępne od"></MatTextField>
                            <ValidationMessage For="@(() => hallRentVm.AvailableFromDate)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4"></div>

                <!-- address -->
                <CreateFormSplitter Text="Lokalizacja"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatSelectValue Style="width:100%;" Label="Województwo" @bind-Value="@hallRentVm.Voivodeship" Items="@voivodeships" ValueSelector="@(i=>i)">
                        <ItemTemplate Context="thisContext">
                            <span>@EnumHelper.GetDescriptionFromEnum(thisContext)</span>
                        </ItemTemplate>
                    </MatSelectValue>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <p>
                        <MatTextField Style="width:100%;" Label="Miasto" @bind-Value="hallRentVm.City" />
                        <ValidationMessage For="@(() => hallRentVm.City)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                    <p>
                        <MatTextField Style="width:100%;" Label="Adres" @bind-Value="hallRentVm.Address" />
                        <ValidationMessage For="@(() => hallRentVm.Address)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

                <!-- description textArea -->
                <CreateFormSplitter Text="Informacje szczegółowe"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-8">
                    <p>
                        <MatTextField HelperText="Przyjmuję tagi HTML celem dekoracji tekstu" HelperTextPersistent="true" Style="width:100%;" @bind-Value="hallRentVm.Description" Label="Opis" TextArea="true"></MatTextField>
                        <ValidationMessage For="@(() => hallRentVm.Description)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

                <!-- extra row #1 (wysokość, konstrukcja, parking, stan wykończenia) -->
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <p>
                        <MatNumericUpDownField Label="Wysokość (m)"
                                               @bind-Value=@hallRentVm.Height
                                               Style="width:100%;"
                                               DecimalPlaces=0>
                        </MatNumericUpDownField>
                        <ValidationMessage For="@(() => hallRentVm.Height)" />
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatSelectValue Style="width:100%;" Label="Konstrukcja" @bind-Value="@hallRentVm.Construction" Items="@constructions" ValueSelector="@(i=>i)">
                        <ItemTemplate Context="thisContext">
                            <span>@EnumHelper.GetDescriptionFromEnum(thisContext)</span>
                        </ItemTemplate>
                    </MatSelectValue>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatSelectValue Style="width:100%;" Label="Parking" @bind-Value="@hallRentVm.ParkingSpace" Items="@parkings" ValueSelector="@(i=>i)">
                        <ItemTemplate Context="thisContext">
                            <span>@EnumHelper.GetDescriptionFromEnum(thisContext)</span>
                        </ItemTemplate>
                    </MatSelectValue>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatSelectValue Style="width:100%;" Label="Stan wykończenia" @bind-Value="@hallRentVm.FinishCondition" Items="@finishConditions" ValueSelector="@(i=>i)">
                        <ItemTemplate Context="thisContext">
                            <span>@EnumHelper.GetDescriptionFromEnum(thisContext)</span>
                        </ItemTemplate>
                    </MatSelectValue>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

                <!-- extra row #2 (posadzka, ogrzewanie, ogrodzenie, pomieszczenia biurowe) -->
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <p>
                        <MatSelectValue Style="width:100%;" Label="Posadzka" @bind-Value="@hallRentVm.Flooring" Items="@floorings" ValueSelector="@(i=>i)">
                            <ItemTemplate Context="thisContext">
                                <span>@EnumHelper.GetDescriptionFromEnum(thisContext)</span>
                            </ItemTemplate>
                        </MatSelectValue>
                    </p>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Heating" Indeterminate="true">Ogrzewanie</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Heating = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Fencing" Indeterminate="true">Ogrodzenie</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Fencing = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.HasOfficeRooms" Indeterminate="true">Pomieszczenia biurowe</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.HasOfficeRooms = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.HasSocialFacilities" Indeterminate="true">Zaplecze socjalne</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.HasSocialFacilities = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.HasRamp" Indeterminate="true">Rampa</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.HasRamp = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6"></div>



                <CreateFormSplitter Text="Przeznaczenie obiektu"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Storage" Indeterminate="true">Magazynowe</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Storage = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Production" Indeterminate="true">Produkcyjne</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Production = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Office" Indeterminate="true">Biurowe</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Office = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Commercial" Indeterminate="true">Handlowe</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Commercial = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>


                <!-- security -->
                <CreateFormSplitter Text="Zabezpieczenia"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.AntiBurglaryBlinds" Indeterminate="true">Rolety antywłamaniowe</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.AntiBurglaryBlinds = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.AntiBurglaryWindowsOrDoors" Indeterminate="true">Drzwi lub okna antywłamaniowe</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.AntiBurglaryWindowsOrDoors = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.IntercomOrVideophone" Indeterminate="true">Domofon lub wideofon</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.IntercomOrVideophone = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>

                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.MonitoringOrSecurity" Indeterminate="true">Monitoring lub ochrona</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.MonitoringOrSecurity = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.AlarmSystem" Indeterminate="true">System alarmowy</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.AlarmSystem = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.ClosedArea" Indeterminate="true">Teren zamknięty</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.ClosedArea = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>


                <CreateFormSplitter Text="Media"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Water" Indeterminate="true">Woda</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Water = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Electricity" Indeterminate="true">Prąd</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Electricity = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.ThreePhaseElectricPower" Indeterminate="true">Siła</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.ThreePhaseElectricPower = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Internet" Indeterminate="true">Internet</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Internet = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Phone" Indeterminate="true">Telefon</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Phone = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Gas" Indeterminate="true">Gaz</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Gas = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.SepticTank" Indeterminate="true">Szambo</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.SepticTank = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.Sewerage" Indeterminate="true">Kanalizacja</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.Sewerage = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.SewageTreatmentPlant" Indeterminate="true">Oczyszczalnia ścieków</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.SewageTreatmentPlant = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>

                <CreateFormSplitter Text="Dojazd"></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.FieldDriveway" Indeterminate="true">Nieutwardzony</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.FieldDriveway = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.PavedDriveway" Indeterminate="true">Utwardzony</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.PavedDriveway = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.AsphaltDriveway" Indeterminate="true">Asfaltowy</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.AsphaltDriveway = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1"></div>

                <!-- submit button -->
                <CreateFormSplitter Text=""></CreateFormSplitter>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatCheckbox Style="width:100%;" @bind-Value="@hallRentVm.RemoteControl" Indeterminate="true">Obsługa zdalna</MatCheckbox>
                    <MatButton Type="button" OnClick="@(_ =>
                                 {
                                     hallRentVm.RemoteControl = null;
                                 })">Wyczyść</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                        <MatSelectValue Style="width:100%;" Label="Status oferty" @bind-Value="@hallRentVm.OfferStatus" Items="@offerStatuses" ValueSelector="@(i=>i)">
                        <ItemTemplate Context="thisContext">
                            <span>@EnumHelper.GetDescriptionFromEnum(thisContext)</span>
                        </ItemTemplate>
                    </MatSelectValue>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                    <MatButton Disabled="@submitDisabled" Style="width: 100%;" Type="submit" Raised="true">Edytuj ofertę</MatButton>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

            </div>
        </div>
    </MatThemeProvider>
</EditForm>
}
@code {
    [Parameter]
    public string OfferId { get; set; }
    public bool submitDisabled { get; set; }

    public HallRentOfferUpdateViewModel hallRentVm { get; set; }
    public Voivodeships[] voivodeships = Enum.GetValues(typeof(Voivodeships)).Cast<Voivodeships>().ToArray();
    public TypeOfMarket[] typesOfMarket = Enum.GetValues(typeof(TypeOfMarket)).Cast<TypeOfMarket>().ToArray();
    public HallFinishCondition[] finishConditions = Enum.GetValues(typeof(HallFinishCondition)).Cast<HallFinishCondition>().ToArray();
    public HallConstruction[] constructions = Enum.GetValues(typeof(HallConstruction)).Cast<HallConstruction>().ToArray();
    public ParkingType[] parkings = Enum.GetValues(typeof(ParkingType)).Cast<ParkingType>().ToArray();
    public Flooring[] floorings = Enum.GetValues(typeof(Flooring)).Cast<Flooring>().ToArray();
    public OfferStatus[] offerStatuses = Enum.GetValues(typeof(OfferStatus)).Cast<OfferStatus>().ToArray();
    public async void Success()
    {
        var message = await _apiLogic.UpdateHallRentOffer(hallRentVm, int.Parse(OfferId));
        if (message == "Success")
        {
            NavManager.NavigateTo($"/Offer/{OfferId}");
        }
        else
        {
            await JS.InvokeVoidAsync("window.alert", "Podczas edycji oferty wystąpił błąd. Spróbuj ponownie później!");
        }
    }

    int? sellerId;
    protected override async Task OnInitializedAsync()
    {
        await JS.InvokeVoidAsync("window.scrollTo", new int[] {0, 1});
        sellerId = await Http.GetFromJsonAsync<int>($"OfferController/GetOwner/{int.Parse(OfferId)}");
        hallRentVm = await Http.GetFromJsonAsync<HallRentOfferUpdateViewModel?>($"OfferController/GetUpdateViewModel/{int.Parse(OfferId)}");
    }
    MatTheme theme = new()
        {
            Primary = "#4caf50",
            Secondary = "#4caf50",
            Surface = "#ffffff"
        };

}